#!/bin/bash
# Cross-platform development environment setup
# This script automatically detects the platform and runs the appropriate setup script

set -e

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

print_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_header() {
    echo -e "\n${CYAN}====================================================${NC}"
    echo -e "${CYAN}$1${NC}"
    echo -e "${CYAN}====================================================${NC}\n"
}

# Detect platform
detect_platform() {
    if [[ "$OSTYPE" == "darwin"* ]]; then
        echo "macos"
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        echo "linux"
    elif [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "cygwin" ]] || [[ -n "$WSL_DISTRO_NAME" ]]; then
        echo "windows-bash"
    elif [[ -n "$WINDIR" ]] || [[ -n "$windir" ]]; then
        echo "windows-powershell"
    else
        echo "unknown"
    fi
}

# Main function
main() {
    print_header "Persist Development Environment Setup"
    
    # Get script directory
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    
    # Detect platform
    PLATFORM=$(detect_platform)
    print_info "Platform detected: $PLATFORM"
    
    case $PLATFORM in
        "macos"|"linux"|"windows-bash")
            print_info "Running bash setup script..."
            if [[ -f "$SCRIPT_DIR/setup-dev-environment.sh" ]]; then
                bash "$SCRIPT_DIR/setup-dev-environment.sh" "$@"
            else
                print_error "Bash setup script not found at $SCRIPT_DIR/setup-dev-environment.sh"
                exit 1
            fi
            ;;
        "windows-powershell")
            print_info "For Windows PowerShell, please run:"
            print_info "    .\\setup-dev-environment.ps1 $*"
            print_warning "Or use Git Bash/WSL to run: ./setup-dev-tools $*"
            exit 1
            ;;
        *)
            print_error "Unsupported platform: $PLATFORM"
            print_info "Supported platforms:"
            print_info "  - macOS (Intel & Apple Silicon)"
            print_info "  - Linux (Ubuntu, Debian, RHEL, CentOS, Fedora)"
            print_info "  - Windows (WSL, Git Bash, PowerShell)"
            exit 1
            ;;
    esac
}

# Show usage if help is requested
if [[ "$1" == "--help" ]] || [[ "$1" == "-h" ]]; then
    print_header "Persist Development Environment Setup"
    echo "Cross-platform tool validation and installation script"
    echo ""
    echo "USAGE:"
    echo "    ./setup-dev-tools [OPTIONS]"
    echo ""
    echo "This script automatically detects your platform and runs the appropriate setup:"
    echo "  - Unix-like systems: setup-dev-environment.sh"
    echo "  - Windows PowerShell: setup-dev-environment.ps1"
    echo ""
    echo "OPTIONS (passed to underlying scripts):"
    echo "    --auto-install    Automatically install missing tools"
    echo "    --verbose        Enable verbose output"
    echo "    --dry-run        Show what would be done without executing"
    echo "    --help           Show this help message"
    echo ""
    exit 0
fi

# Run main function with all arguments
main "$@"

# Pre-commit hooks configuration
# Install with: pip install pre-commit && pre-commit install

repos:
  # Rust formatting and linting
  - repo: https://github.com/doublify/pre-commit-rust
    rev: v1.0
    hooks:
      - id: fmt
        name: Rust format
        description: Format Rust code with rustfmt
        entry: cargo fmt
        language: system
        files: \.rs$
        args: ["--all", "--", "--check"]
      
      - id: clippy
        name: Rust clippy
        description: Lint Rust code with clippy
        entry: cargo clippy
        language: system
        files: \.rs$
        args: ["--all-targets", "--all-features", "--", "-D", "warnings"]

  # Python formatting and linting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        name: Python format
        language: python
        files: ^persist-python/.*\.py$

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.8
    hooks:
      - id: ruff
        name: Python lint
        files: ^persist-python/.*\.py$
        args: [--fix]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        name: Python type check
        files: ^persist-python/.*\.py$
        args: [--ignore-missing-imports]

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
      - id: end-of-file-fixer
        name: Fix end of files
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-added-large-files
        name: Check for large files
        args: ['--maxkb=1000']
      - id: check-yaml
        name: Check YAML files
      - id: check-toml
        name: Check TOML files

  # Markdown and documentation
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        name: Lint Markdown
        args: ['--disable', 'MD013', 'MD033', 'MD041']

# Configuration for specific hooks
default_language_version:
  python: python3

# CI configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
